<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Computer Science on New River, New Water</title>
    <link>https://mooxiu.github.io/categories/computer-science/</link>
    <description>Recent content in Computer Science on New River, New Water</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <copyright>Copyright Â© 2024, haruka hsiao.</copyright>
    <lastBuildDate>Wed, 21 Aug 2024 22:06:42 +0900</lastBuildDate>
    <atom:link href="https://mooxiu.github.io/categories/computer-science/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>My note on LLVM</title>
      <link>https://mooxiu.github.io/my-note-on-llvm/</link>
      <pubDate>Wed, 21 Aug 2024 22:06:42 +0900</pubDate>
      <guid>https://mooxiu.github.io/my-note-on-llvm/</guid>
      <description>This is my note for This LLVM Talk. This is a very beginning level note.&#xA;Code LLVM monorepo: Now the single source of truth is now in github. Subdirectories: Each one is a sub project. The most famous one is llvm-project/clang (the &amp;ldquo;core&amp;rdquo;)(front-end for C/C++/Cuda, etc)(what is front-end) Building: default building is debug build, and very slow More on /GettingStarted.html Compilers file.cpp -&amp;gt; Clang AST -&amp;gt; LLVM IR -&amp;gt; Selection DAG -&amp;gt; LLVM MIR -&amp;gt; Machine Code LLVM-IR LLVM IR Hierarchy Module GlobalVariable Function BasicBlock Instruction ICmpInst BranchInst assembly-like language always in SSA-from with infinite registers What is SSA: Static Single-assignment form In compiler design, static single assignment form (often abbreviated as SSA form or simply SSA) is a type of intermediate representation (IR) where each variable is assigned exactly once.</description>
    </item>
    <item>
      <title>How to avoid aliasing in Virtual Indexed Physical Tagged</title>
      <link>https://mooxiu.github.io/how-to-avoid-aliasing-in-virtual-indexed-physical-tagged/</link>
      <pubDate>Sat, 20 Jul 2024 17:44:00 +0900</pubDate>
      <guid>https://mooxiu.github.io/how-to-avoid-aliasing-in-virtual-indexed-physical-tagged/</guid>
      <description>The problem of VIPT(Virtual Indexed Physical Tagged) cache is that multiple virtual addresses can be mapped to the same physical address. This is not a problem for physical indexed and physical tagged cache (AKA, the standard practice), but for VIPT, the virtual address can fetch memory blocks to different caches, once a cache has been written, there&amp;rsquo;s a problem of inconsistency, whcih is so-called &amp;ldquo;aliasing&amp;rdquo;.&#xA;To prevent it, we can make those virtual addresses mapped to the same cache.</description>
    </item>
  </channel>
</rss>
