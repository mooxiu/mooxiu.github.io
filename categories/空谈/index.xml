<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>空谈 on New River, New Water</title>
    <link>https://mooxiu.github.io/categories/%E7%A9%BA%E8%B0%88/</link>
    <description>Recent content in 空谈 on New River, New Water</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <copyright>Copyright © 2024, muyao haruka hsiao.</copyright>
    <lastBuildDate>Sun, 20 Mar 2022 19:16:40 +0800</lastBuildDate>
    <atom:link href="https://mooxiu.github.io/categories/%E7%A9%BA%E8%B0%88/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Eight Days A Week</title>
      <link>https://mooxiu.github.io/eight-days-a-week/</link>
      <pubDate>Sun, 20 Mar 2022 19:16:40 +0800</pubDate>
      <guid>https://mooxiu.github.io/eight-days-a-week/</guid>
      <description>&lt;p&gt;在疫情已经过了两年半之后，我终于讽刺地第一次体验到了在家办公，与此同时，世界上的其他国家几乎都宣布了疫情的结束。&lt;/p&gt;&#xA;&lt;p&gt;与大多数人不同的是，我对于长时间处在同一个物理空间这件事情没有任何怨言，只要这里安静，没有其他人，我可以自由地变化任何姿势，坐着，站着，趴着，这都让我觉得非常自由，&lt;code&gt;Free As In Freedom&lt;/code&gt;。我不明白为什么很多人对于疫情期间无法出门旅游这件事情感到如此愤怒，与此同时，这些人在无法自由访问各种网站这件事情上却没有任何不满。&lt;/p&gt;&#xA;&lt;p&gt;我一开始以为WFH会是&lt;a href=&#34;https://www.youtube.com/watch?v=Rgx8dpiPwpA&#34;&gt;这样一种情况&lt;/a&gt;:&#xA;&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/Rgx8dpiPwpA?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;但事实上并非如此, 这周因为我有非常具体的工作，而且时间非常紧张，我几乎所有的时间都用来Coding；每天早上我们都会开会，所以像上述视频这样睡到中午起来是绝无可能的；幸运的是，和公司的内网连接非常稳定，几乎没有给我造成任何障碍，在密集的编程作业中，我有几次都进入了沉浸式的所谓Flow的状态。当然至于写出什么样的代码这种事情就只能听天由命了。&lt;/p&gt;&#xA;&lt;p&gt;不过相比于写代码，一般来说，人与人之间的沟通往往是远程办公的最大挑战。但我们team之间这周几乎连share screen都不需要，在群里扔github PR截图几乎就满足了我们的全部需求……当然是在彼此之间对于任务都非常了解的情况下。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;If you like my article and want to make a donation, you can click the &lt;a href=&#34;https://mooxiu.github.io/donate/&#34;&gt;捐赠 Donation&lt;/a&gt; button on the side bar.&lt;/p&gt;</description>
    </item>
    <item>
      <title>键盘艺术的练习之路：vim和emacs</title>
      <link>https://mooxiu.github.io/%E9%94%AE%E7%9B%98%E8%89%BA%E6%9C%AF%E7%9A%84%E7%BB%83%E4%B9%A0%E4%B9%8B%E8%B7%AFvim%E5%92%8Cemacs/</link>
      <pubDate>Fri, 17 Dec 2021 21:23:11 +0800</pubDate>
      <guid>https://mooxiu.github.io/%E9%94%AE%E7%9B%98%E8%89%BA%E6%9C%AF%E7%9A%84%E7%BB%83%E4%B9%A0%E4%B9%8B%E8%B7%AFvim%E5%92%8Cemacs/</guid>
      <description>&lt;p&gt;两年前，我写了一篇叫做「&lt;a href=&#34;https://www.douban.com/note/726968772/&#34;&gt;如何像演奏乐器一样打字&lt;/a&gt;」的文字。那个时候，我改进了一个虽然非常微妙，但并不trivial的键盘使用技法，那就是使用&lt;code&gt;shift&lt;/code&gt;键而不是&lt;code&gt;caps lock&lt;/code&gt;键来切换大小写。这样做的好处在于：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;并不是所有的键盘的&lt;code&gt;caps lock&lt;/code&gt;键都是用来切换大小写的，比如Mac的中文键盘这个位置的键是用来中英文切换的。&lt;/li&gt;&#xA;&lt;li&gt;我们需要持续输入大写字母的场合并不多，而且个人非常讨厌看到一堆连续的大写字母。需要大写字母的场合，往往都需要紧跟小写字母，这样如果是用&lt;code&gt;caps lock&lt;/code&gt;反而会降低输入速度（热知识：&lt;code&gt;SQL&lt;/code&gt;是大小写不敏感的，你可以一直根本不输入大写字母）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;プロのようにvimを使う&#34;&gt;プロのようにvimを使う&lt;/h2&gt;&#xA;&lt;p&gt;最近练习的新技巧是很多人都已经可以熟练使用的&lt;code&gt;vim&lt;/code&gt;快捷键。长久以来，我对于&lt;code&gt;vim&lt;/code&gt;的习得程度就是「能用」。在没有GUI的计算机上我不得不效率低下地使用它编辑文本，但一到真正需要高效编辑的情形，我又会切换成最符合直觉的输入方式。&lt;/p&gt;&#xA;&lt;p&gt;不过，我至少可以记忆&lt;code&gt;vim&lt;/code&gt;快捷键的原因在于：长久以来我都在浏览器（Chrome和Firefox）上使用一个叫做&lt;code&gt;Vimium&lt;/code&gt;的插件，你可以用&lt;code&gt;vim&lt;/code&gt;的快捷键浏览网页，比如 &lt;code&gt;j&lt;/code&gt;向下滚动, &lt;code&gt;k&lt;/code&gt;向上滚动, &lt;code&gt;/&lt;/code&gt;搜索, &lt;code&gt;gg&lt;/code&gt;到网页最上方, &lt;code&gt;G&lt;/code&gt;到网页底部。那个时候我曾经有一个仅仅使用键盘来流畅使用计算机的梦想。&lt;/p&gt;&#xA;&lt;p&gt;最近一两个星期，我痛定思痛，决定纯粹使用&lt;code&gt;vim&lt;/code&gt;快捷键来写代码。我大概需要追加记忆的快捷键大概有：&lt;code&gt;o&lt;/code&gt;从下一行插入, &lt;code&gt;a&lt;/code&gt;从一格插入, &lt;code&gt;$&lt;/code&gt;定位到行尾, &lt;code&gt;^&lt;/code&gt;定位到有文字的行首, &lt;code&gt;0&lt;/code&gt;定位到行首, &lt;code&gt;y&lt;/code&gt;复制, &lt;code&gt;p&lt;/code&gt;粘贴，&lt;code&gt;d&lt;/code&gt;删除。&lt;/p&gt;&#xA;&lt;p&gt;经过一两个星期的习惯之后，现在已经可以非常熟练地输入了。尽管我觉得使用&lt;code&gt;vim&lt;/code&gt;快捷键替代原来的输入方式在实际上并不一定能够带来什么好处，但我认为这是一个将键盘使用作为演奏艺术来看待的人的必修课。&lt;/p&gt;&#xA;&lt;p&gt;除此之外，我觉得它还拥有的好处是，它会强迫你输入英文，因为&lt;code&gt;vim&lt;/code&gt;快捷键仅在英文输入法下生效，在需要切换中英文的场景下，使用&lt;code&gt;vim&lt;/code&gt;快捷键效率不高。于此同时，在工作的时候练习&lt;code&gt;vim&lt;/code&gt;给枯燥的工作增添了乐趣。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;意外にemacsも習得&#34;&gt;意外にemacsも習得&lt;/h2&gt;&#xA;&lt;p&gt;众所周知，在编辑器领域，一直有所谓「编辑器之神」&lt;code&gt;vim&lt;/code&gt;和「神之编辑器」&lt;code&gt;emacs&lt;/code&gt;双足鼎力的说法。&lt;/p&gt;&#xA;&lt;p&gt;长久以来，我都对RMS 充满了敬佩，因此在我心中，&lt;code&gt;emacs&lt;/code&gt;永远是是格调的顶层。但它似乎离我非常遥远，我曾经尝试学习过一次&lt;code&gt;emacs&lt;/code&gt;，但什么也记不住。&lt;/p&gt;&#xA;&lt;p&gt;在这次练习&lt;code&gt;vim&lt;/code&gt;快捷键的时候，有一个意外之喜，那就是被同时告知，MacOS其实原生就在文本编辑上绑定了&lt;code&gt;emacs&lt;/code&gt;的快捷键。这样一来，在自己的打字风格中融入一点&lt;code&gt;emacs&lt;/code&gt;就多了许多的现实意义。比如在很多地方&lt;code&gt;control + a&lt;/code&gt;意味着移动到行首，&lt;code&gt;control + e&lt;/code&gt; 意味着移动到行尾……诸如此类。于是我大概学习了10个左右的&lt;code&gt;emacs&lt;/code&gt;快捷键，发现他们可以在非常多的场合下使用这些快捷键。我进一步替代了上下左右四个方向键的使用。&lt;/p&gt;&#xA;&lt;p&gt;于此同时，我还意识到了&lt;code&gt;vim&lt;/code&gt;和&lt;code&gt;emacs&lt;/code&gt;在哲学上的不同：&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;vim&lt;/code&gt;通过两个形态（insert mode 和非 insert mode）让同样的键盘多了更多的功能，同时可以通过连续的指令组合成更复杂的指令，众所周知，这是&lt;code&gt;Unix&lt;/code&gt;的哲学。&lt;/p&gt;&#xA;&lt;p&gt;而&lt;code&gt;emacs&lt;/code&gt;则是通过&lt;code&gt;control&lt;/code&gt;键区分了「输入字符」和「输入命令」这两件事，也就是说，&lt;code&gt;emacs&lt;/code&gt;强迫你不得不有时候同时按下两个以上的按键，这就是键盘演奏的「和弦」。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;将来は&#34;&gt;将来は？&lt;/h2&gt;&#xA;&lt;p&gt;对于一个中文世界的职业的键盘演奏者，我觉得我也不得不思考如何让中文输入更具艺术性。我现在使用的是拼音输入法，而且我不打缩写，也就是说，如果我要说：&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;如何像演奏乐器一样打字&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;我的输入是&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;ru he xiang yan zou yue qi yi yang da zi&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;而不是类似下面这种&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;rh xiang yz yq yy dz&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;中文的输入是更复杂的问题，它是一个在「准确度」和「效率」之间折中的艺术。如果你像下面的例子那样打了太多缩写，那么寻找正确的词汇会耗费你不少的时间，远远比你打全拼慢，而且如你看到的那样，没有任何技术和反思，我认为非常不优雅。&lt;/p&gt;&#xA;&lt;p&gt;现在摆在我面前的选择有「五笔」和「双拼」，据说这两者是中文输入效率的极致，一个纯熟的「五笔」或是「双拼」的演奏者就像一个熟练的钢琴演奏家那样，光是看他们的输入，就使人心旷神怡。&lt;/p&gt;&#xA;&lt;p&gt;「五笔」输入是一种颇为日式的选择，据我观察，熟练的日文输入者习惯使用键盘的假名输入日文，这样他们一次触键就能够抵得上我两次（假名往往是一个辅音一个元音，比如一个&lt;code&gt;も&lt;/code&gt;就比得上我输入&lt;code&gt;mo&lt;/code&gt;触键两次），使用五笔的原理我想于此类似。但问题是，「五笔」是一种日渐衰败的艺术。我觉得一个新时代的拼音使用者还是应当弃暗投明，因此，我将「双拼」视为我下一步精进的目标。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;付「如何像演奏乐器一样打字」的原文：&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;mooxiu 2019-07-20 18:50:35 &lt;br&gt;&#xA;&lt;br&gt;&#xA;小时候刚学习打字的时候，老师告诉我，左手四指应该放在A S D F上，而右手J K L 以及分号上，中间留出G H的空格，两只空闲的大拇指放在空格键上。&#xA;&lt;br&gt;&#xA;&lt;br&gt;&#xA;那个时候我住在父母的员工宿舍，一到放月假的时候，父亲的同事就会给我他宿舍的钥匙，我可以去使用他的电脑。但是那个时候电脑里面什么都没有，你可以想象，一个Windows98的系统，没有网线，你可以干什么。我那个时候还没办法打开命令行或者VBA给自己找点乐子。我猜我可能玩了有一千局的「纸牌」，五百盘的「空当接龙」和两百盘「红心大战」。&#xA;&lt;br&gt;&#xA;&lt;br&gt;&#xA;除此之外的活动就是练习打字。那个时候打字很快似乎是一件值得炫耀的事情，而且可能在大人的眼里也不是什么坏事。不仅我自己，我印象中我爸妈也苦练过打字，那是更久之前了。我印象中他们不仅可以使用五笔打字（Which 我现在还不会），甚至可以不看键盘盲打。但那个时候我并不把打字很快当作一件值得炫耀的，酷炫的事情，反而是当成一种一本正经，仿佛是和考试得了高分一样的那种优质特长。&#xA;&lt;br&gt;&#xA;&lt;br&gt;&#xA;我几乎每个周末都会在叫类似「金山打字」这样的名字的软件上花费五个小时以上。但我不仅没能熟稔盲打，而且还养成了偏离科学指法的怪癖。从我现在的习惯来说，我的右手可以说还是不偏不倚地放在J K L ；这四个键上，左手则是完全向左边移动了一位。小拇指放在大写键上，剩下三只手指则是A S D。原本仅仅应当空出G H，我则带着F一道空了出来。问题是，我用这种怪异的打字方式打起字来却是异常迅速。每到放假回家，我妈看着我对着电脑奋笔疾书的时候（我总觉得现在电脑键盘在我妈眼里就像是一摊油腻的猪肉，她总是用一根指头去小心翼翼地拨弄它们），都会抱怨「我整天听着你的键盘咚咚咚的声音！」。&#xA;&lt;br&gt;&#xA;&lt;br&gt;&#xA;但这不是我的问题，我不知道所谓「科学的键盘指法」这种东西是不是真的存在，但我现在想，这种东西或许根据内容的不同而各异。我现在的职业，姑且也算是写程序的一种，虽然也算不得什么了不起的代码，但多少每天也得输入不少东西。众所周知，不同的编程语言有不同的编程风格，比方说对于大小写就有自己的看法。就各位喜欢的Python而言，输入变量名或者是函数名，完全不需要切换大小写，仅仅在不同的单词之间插入下划线就行；Java则是老派的驼峰式命名规则，作为变量名的第一个单词之后的每一个单词首字母都应当大写，这种情况下，大小写字母的转换则是影响打字速度的核心。&#xA;&lt;br&gt;&#xA;&lt;br&gt;&#xA;关于打字，我常常会用演奏乐器来比对。我小时候学过二胡，摸过小提琴，长大之后弹过一点吉他和贝斯。尽管乐器各不相同，但是指法上都有共同点，那就是指尖按弦，而且按弦的时候要尽可能与指板垂直。（当然，我们可以看到一些朋克乐手按弦的时候往往不拘小节，左手斜着整个一块儿都按在弦上的情况也是有的，当然朋克乐手在很多人眼里都不算在演奏乐器。）我关注的一个问题是：如何弹得快呢？（如何优雅而快速地打字呢）&#xA;&lt;br&gt;&#xA;&lt;br&gt;&#xA;当然指法上而言，剪短指甲（露出指尖的肉），指尖按键是最基本的。我想，指尖按键可以避免不必要的动作，而且也可以最快地按在键盘上。剪短指甲则减少了错误按键。&#xA;&lt;br&gt;&#xA;&lt;br&gt;&#xA;另一个方面则是灵活使用小指以及快速变换把位。小指一直以来是刚刚学习乐器演奏的难点——它们很少被使用，往往不够有力，而且不够灵活，仿佛它们有一半不受我们本人控制。科学的演奏训练必然是有专门针对小指的练习曲。而变换把位，在我看来则是跟小指的灵活度是一种互补的关系。本来我们可以用小指头勾到的一个音，我们也可以移动整个左手用其他更灵活的指头去按。后者就是我现在的打字习惯，当我把左手向左边移动一位的时候，我事实上就是因为左手的小拇指不够灵活没办法平稳迅速地按到类似Shift键这种地方。&#xA;&lt;br&gt;&#xA;&lt;br&gt;&#xA;这就是我昨天在上班的时候意识到的问题，我废弃了对于左手小拇指的努力，而将迅速打字的希望寄托在了我的左手可以飞速移动上。久而久之，更加复杂的曲目（更加复杂的打字流程）一定会让我捉襟见肘。（尽管莫扎特有所谓用鼻子按琴键）。我觉得我愧对我受过的音乐训练。于是我开始在切换大小写时，努力训练自己用小指头去按住Shift键，而不是用无名指按一下CapsLock（所谓大写键）。尽管一开始，这种与我过去十几年打字生涯相悖的触键方式令我感到不适，但我知道，我现在终于走在一个正确的道路上了。我可能是整间办公室打字最优雅，指法最科学的键盘演奏家了。&#xA;&lt;br&gt;&#xA;&lt;br&gt;&#xA;不仅如此，我们怎么能忘了演奏乐器最核心的一点——情感呢？&#xA;&lt;br&gt;&#xA;&lt;br&gt;&#xA;我想象着Glenn Gould或者Keith Jarret弹钢琴的样子，我起伏着上身，感受着键盘上波浪一般的涌动的双手敲击的节奏，当然也别忘了用脚尖去轻轻踩脚下虚幻的踏板（这样音符会更柔和），我更确信，我是整个办公室，整个办公楼，整个街道，最优雅的键盘使用者了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>notion很好，所以我选择logseq</title>
      <link>https://mooxiu.github.io/notion%E5%BE%88%E5%A5%BD%E6%89%80%E4%BB%A5%E6%88%91%E9%80%89%E6%8B%A9logseq/</link>
      <pubDate>Thu, 16 Dec 2021 22:17:13 +0800</pubDate>
      <guid>https://mooxiu.github.io/notion%E5%BE%88%E5%A5%BD%E6%89%80%E4%BB%A5%E6%88%91%E9%80%89%E6%8B%A9logseq/</guid>
      <description>&lt;p&gt;今天看到一种说法，叫做现如今（今天是2021年12月16日）所有的笔记软件都在抄 notion 。notion 确实是一款非常成功的笔记软件，但如果仅仅将它作为笔记软件，则是狭隘化了它的用途，我们看看跟它对标的产品：&lt;/p&gt;&#xA;&lt;p&gt;比如 &lt;a href=&#34;https://github.com/AppFlowy-IO/appflowy&#34;&gt;AppFlowy&lt;/a&gt;：&#xA;&lt;img src=&#34;appflowy.png&#34; alt=&#34;AppFlowy&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;再比如微软的&lt;a href=&#34;https://www.microsoft.com/en-us/microsoft-loop?ms.url=microsoftcommicrosoft-loop&#34;&gt;Microsoft Loop&lt;/a&gt;:&#xA;&lt;img src=&#34;loop.png&#34; alt=&#34;Microsoft Loop&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;他们除了作为笔记软件以外，更强调 workspace。特别是他们都有类似敏捷开发的TODO， DOING， DONE 的 dashboard， 小型团队使用这样的软件作为它们的计划管理工具和知识共享仓库简直再适合不过。&lt;/p&gt;&#xA;&lt;h2 id=&#34;所以我为什么不再使用notion了&#34;&gt;所以我为什么不再使用Notion了&lt;/h2&gt;&#xA;&lt;p&gt;我将 notion 作为个人的主要笔记软件使用过一段时间，最喜欢的地方是……每一篇文章都可以给我自动生成一个 emoji，看起来非常活泼。但问题也相当明显：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;notion 的使用必须联网；一直保持联网意味着你的数据并不存储在你的本地，如果你的笔记涉及到非常隐私的部分，这让人非常不安心。而且这个逻辑也预设你必须要一直有网络连接，这让我感到非常不愉快。&lt;/li&gt;&#xA;&lt;li&gt;notion 没有标准的markdown编辑器。我非常习惯在笔记中嵌入代码，插入引用，加入数学公式，插入超链接……这些在一个标准的markdown 编辑环境非常容易实现而且可以直接在键盘上完成，根本不需要对着菜单的选项点来点去。&lt;strong&gt;点击右键，选择插入超链接，粘贴地址，再加上标题&lt;/strong&gt;这样的操作简直是Microsoft Word的编辑体验。也许它有自己的一套快捷键，但是既然业界已经有标准，为什么还要恶心你？&lt;/li&gt;&#xA;&lt;li&gt;商业化？商业化不是坏事但我觉得开源软件更酷一些。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;也有一些别的问题，比如它是一个electron软件（尽管我现在这篇文章就是在同是electron写的vscode上编辑的），这让软件非常重， 而且体验和在浏览器中打开没有区别，几乎没有提升；再比如我觉得它过于强调视觉体验，我并不是说拥有好的设计不好，只是我觉得这模糊了记笔记的焦点。&lt;/p&gt;&#xA;&lt;h2 id=&#34;所以为什么logseq&#34;&gt;所以为什么LogSeq&lt;/h2&gt;&#xA;&lt;p&gt;如果我想和其他人共享一个工作空间，共同做点什么项目，我觉得notion 可能依然是一个不错的选择。但我使用的场景仅仅是记笔记，所以我想选择一个更加专一，对我自己而言使用体验更好的软件。&lt;/p&gt;&#xA;&lt;p&gt;我已经忘记是在哪里看到logseq的推荐了，回过头来，我已经使用logseq超过一个月了。我几乎每天都会在上面写点什么，上述notion 的缺点它都避免了：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;它支持标准的markdown，同时你也可以单纯将它作为一个索引工具，你可以在特定的文件夹下面使用任何软件编辑你的&lt;code&gt;.md&lt;/code&gt;文件，比如&lt;code&gt;typora&lt;/code&gt; 或者 &lt;code&gt;VSCode&lt;/code&gt;。&lt;/li&gt;&#xA;&lt;li&gt;如果你想要同步你的文件，你可以使用自己的网盘或者干脆把github当作你的网盘，它在后台会自动使用git来版本控制你的变更。&lt;/li&gt;&#xA;&lt;li&gt;如果你不想要同步你的文件，比如我在公司记录的业务相关的东西，并不是我自己的东西，所以我不希望它同步，我只需要添加一个本地的文件夹作为另一个分区（在logseq中称为graph）。这样我在家里只看得见我同步的graph，完全不会看见不同步的graph。&lt;/li&gt;&#xA;&lt;li&gt;它是一个&lt;a href=&#34;https://github.com/logseq/logseq&#34;&gt;开源的项目&lt;/a&gt;，而且用Clojure写的，非常酷。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;logseq默认记录笔记的地方叫做Journals，写起来就像日记一样，但如果你想要写一个特定主题的东西，你可以新建一个page，这就和普通的软件一样了。但这个Journal最厉害的地方在于，你可以随心所欲记录你想要记录的东西，只需要在前面加上一个类似你在社交网站上加的tag，这样这些tag就会汇集到以这个tag作为标题的页面中去。&lt;/p&gt;&#xA;&lt;p&gt;比如我最近在学习编译原理，每天临时看到东西会打一个&lt;code&gt;compilers&lt;/code&gt;的tag，比如这是14号的笔记：&#xA;&lt;img src=&#34;note_14.png&#34; alt=&#34;14日的笔记&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;这是我7号的相关笔记（关于这个主题只记了短短一句话）：&#xA;&lt;img src=&#34;note_7.png&#34; alt=&#34;7日的笔记&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;但是我可以从这个tag点到一个page，这个page囊括了所有我记录这个主题的文字：&#xA;&lt;img src=&#34;compilers.png&#34; alt=&#34;关于这个主题的所有记录&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;不足&#34;&gt;不足&lt;/h2&gt;&#xA;&lt;p&gt;这个产品还在开放中，截至2021年12月16日，这个软件的最新版本号是&lt;code&gt;0.5.4&lt;/code&gt;，还是早期的阶段。我之前有看到说这个软件会丢笔记，但我也看到这个软件开发者迅速回应并在当天修复了这个问题。目前来说，这个软件存在的不足之处有：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;不支持网页clip，这一点做得最成熟的是EverNote。当然我并不是这个功能的重度用户。&lt;/li&gt;&#xA;&lt;li&gt;还没有vim插件。如果有vim插件的话编辑起来的手感一定更舒服，之前我甚至一直都是用typora打开文件记笔记。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;If you like my article and want to make a donation, you can click the &lt;a href=&#34;https://mooxiu.github.io/donate/&#34;&gt;捐赠 Donation&lt;/a&gt; button on the side bar.&lt;/p&gt;</description>
    </item>
    <item>
      <title>文明玩后感</title>
      <link>https://mooxiu.github.io/%E6%96%87%E6%98%8E%E7%8E%A9%E5%90%8E%E6%84%9F/</link>
      <pubDate>Mon, 06 Dec 2021 22:37:46 +0800</pubDate>
      <guid>https://mooxiu.github.io/%E6%96%87%E6%98%8E%E7%8E%A9%E5%90%8E%E6%84%9F/</guid>
      <description>&lt;p&gt;在Cyber Monday花了70多块钱购入了「文明6」，似乎是除了游戏本身以外还带了几个DLC。看起来非常划算，但应该也是steam定价策略的一环。&lt;/p&gt;&#xA;&lt;p&gt;在Apple Silicon的MBP上的表现似乎有点问题（这个游戏需要通过rosette转译，性能还行，我选择了2k 120Hz的分辨率，没有遇到卡顿， 当然打了之后电脑温热），如果我新建游戏时选择使用完整的世界地图就会进入游戏失败。但总之最后让电脑帮我选了个角色进去玩了。&lt;/p&gt;&#xA;&lt;p&gt;我认为这个游戏最残忍的地方在于一个游戏最后只有一个胜利者，如果你在500回合之内没有取得胜利就会直接给你失败的标签，没有诸如「恭喜你获得了第二名」，「恭喜你活了下来」这样的结果。但好在在胜利方式上可以有很多种：统治胜利，文化胜利，科技胜利，外交胜利，等等。而这其中每一个方面似乎都可以简化为一个数值，这是我感到不太对劲的地方。如果你想要文化胜利，你似乎就需要招募一些大文学家，大音乐家之类的，但问题是文化和科技，外交不是正交的存在，而是相互之间有着复杂的相互作用：比如前工业时代的人就无法生产后工业时代的的文化产品……这样看来，似乎必须得在每一个方面都不能放松。&lt;/p&gt;&#xA;&lt;p&gt;我非常好奇电脑是怎么发展得这么快的，在我最在意的科技方面远胜于我。作为一个实用主义中国人，我花了大量的钱建立了大学，图书馆，和实验室，并且花了大价钱投入在学术基金上，但好像没有我想象的那种产出，而且生产速度慢得惊人。反而是投入大价钱到我觉得没什么用的世界奇观上好像会有触类旁通的功效。（我之所以不愿意造世界奇观很可能是收到小时候玩的「帝国时代2」的影响，众所周知，在「帝国时代2」中，世界奇观一点用也没有；现实中建造像帝国大厦这样的奢华建筑往往也容易沦为企业和国家衰落的注脚）&lt;/p&gt;&#xA;&lt;p&gt;另一个我意识到的点是，我在前期为了保证国土安全，在每个城市都部署了一些军队，这样前期很快我就在统治胜利的得分表上名列第一。但事实上这个游戏中邻国攻击你的概率非常小，你事实上几乎只用防范一些蛮族就行了。这让我意识到我非常没有安全感，也让我更加理解为什么现实世界中会有像我一样的人热衷于军备竞赛了。当然，我不愿意进攻别的国家，因此也让我前期的军事力量毫无用武之地，也拖累了我后期的发展。&lt;/p&gt;&#xA;&lt;p&gt;外交上有个说法叫「远交近攻」，我在这个游戏中感觉似乎有点道理：因为在这个游戏中你对一个国家坦诚相待不一定能产生好的作用，这帮人不知道为什么就忽然讨厌我，对我说一些阴阳怪气的话。生产力发展的最有效方式似乎就是迅速占领邻国土地然后建立更多的城市，这样你就拥有了更多的资源，人口，以及生产力，无论你想干什么都会更方便一点。但这哪里是理想世界，这岂不就是丛林法则了，即便是在游戏中当坏人也让我觉得有些困难。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;If you like my article and want to make a donation, you can click the &lt;a href=&#34;https://mooxiu.github.io/donate/&#34;&gt;捐赠 Donation&lt;/a&gt; button on the side bar.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Juicy Steak, Finally</title>
      <link>https://mooxiu.github.io/juicy-steak-finally/</link>
      <pubDate>Mon, 04 Oct 2021 18:38:25 +0800</pubDate>
      <guid>https://mooxiu.github.io/juicy-steak-finally/</guid>
      <description>&lt;p&gt;连续几个周末，因为减肥的需求，有时候我依靠牛排来度过一餐晚饭。在我的记忆中，我在日本的时候可以做出很好吃的牛排，但前几个星期我做出的牛排又老又柴，不能说难以下咽，但也着实不符合我心目中自己的水准。&lt;/p&gt;&#xA;&lt;p&gt;黄油，迷迭香这些配料我应有尽有，但总感觉是错了什么步骤，直到昨天看了名厨Gorden Ramsay的几个视频(比如 &lt;a href=&#34;https://www.bilibili.com/video/BV1qM4y1G7Er&#34;&gt;厨神戈登·拉姆齐教你：在家烹饪出完美牛排的10大要点&lt;/a&gt;， 还有 &lt;a href=&#34;https://www.bilibili.com/video/BV1gE411V79g&#34;&gt;地狱厨神戈登拉姆齐：如何煎出完美牛排&lt;/a&gt;)我才明白自己究竟犯了什么错误：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;牛排不要洗，而是用厨房纸巾把牛排表面解冻的血水吸干（这是我自己总结出来的，但在知乎上似乎有一些争论）&lt;/li&gt;&#xA;&lt;li&gt;在砧板上用手撒盐，牛排在表面滚动充分吸收盐分&lt;/li&gt;&#xA;&lt;li&gt;放入锅的瞬间要用手将牛排摆在锅里，并且按实使得牛肉与油锅充分接触&lt;/li&gt;&#xA;&lt;li&gt;煎牛排的时候先只用油煎，大蒜和迷迭香要在几乎两面都煎好之后放&lt;/li&gt;&#xA;&lt;li&gt;黄油要在起锅之前最后放，然后用勺子舀起黄油泼在牛排上（这样才有充分的黄油香味）&lt;/li&gt;&#xA;&lt;li&gt;如果不是用刀叉吃而是用筷子吃的话，摆盘前应当先切片（这当然也是我的经验）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;仅仅是遵循了上述的步骤，今天做出的牛排就远胜前几次。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;If you like my article and want to make a donation, you can click the &lt;a href=&#34;https://mooxiu.github.io/donate/&#34;&gt;捐赠 Donation&lt;/a&gt; button on the side bar.&lt;/p&gt;</description>
    </item>
    <item>
      <title>鏈接接接平等，但有些鏈接比其他更平等</title>
      <link>https://mooxiu.github.io/2020/03/06/inequality-of-links/</link>
      <pubDate>Fri, 06 Mar 2020 15:16:36 +0000</pubDate>
      <guid>https://mooxiu.github.io/2020/03/06/inequality-of-links/</guid>
      <description>&lt;p&gt;或許移動互聯網給我們帶來了不愛點鏈接，和不愛在文本中置入鏈接的瀏覽和寫作習慣。本質上，移動設備中（甚至是移動設備的瀏覽器）鏈接與鏈接之間的關係，和 PC/Mac 瀏覽器中的鏈接和鏈接之間的關係並不平等。&lt;/p&gt;&#xA;&lt;p&gt;移動設備的世界是由一個個App構成的，它們猶如一個個平行世界。正因為有了這樣的結構，它的網絡瀏覽有了「App內」及「App外」的分野。鏈接如果將你帶到了另一個App，會讓瀏覽體驗產生一種斷裂感，特別是跳轉到那些你沒有下載或者沒有註冊過的App時。這種以鄰為壑的姿態讓這種封閉的趨勢加強。&lt;/p&gt;&#xA;&lt;p&gt;但在 PC/Mac 的瀏覽器上，以當下版本的Chrome 為例，即便是鏈接將你帶入另一個場所，它也僅僅只是體現為瀏覽器上的一個新頁面。你的體驗並不會被割裂，同時，你也更方便返回你原先的位置。因此，PC/Mac 的瀏覽器上的鏈接帶來的是一種在不同空間自由穿梭的體驗。&lt;/p&gt;&#xA;&lt;p&gt;儘管移動設備上同樣可以使用瀏覽器，但一來這並非是移動設備的主流使用方式（很多網站並未很好適配移動端瀏覽器），二來即便如此，網頁的陳列也並非表現為並列的Tab們，而是一個嶄新的頁面。切回原先的畫面往往伴隨著原網頁的重新加載（考慮到移動設備的內存遠小於 PC/Mac）。一旦再考慮到一些網站給移動端瀏覽器惡意帶來的重重障礙的話⋯⋯&lt;/p&gt;</description>
    </item>
    <item>
      <title>不是所有ology都应是science</title>
      <link>https://mooxiu.github.io/2020/01/31/%E4%B8%8D%E6%98%AF%E6%89%80%E6%9C%89ology%E9%83%BD%E5%BA%94%E6%98%AFscience/</link>
      <pubDate>Fri, 31 Jan 2020 18:58:01 +0000</pubDate>
      <guid>https://mooxiu.github.io/2020/01/31/%E4%B8%8D%E6%98%AF%E6%89%80%E6%9C%89ology%E9%83%BD%E5%BA%94%E6%98%AFscience/</guid>
      <description>&lt;p&gt;心理学在努力成为科学之前曾经有过许多有趣而且实用的概念，比如精神分析（在如今依然作为一种治疗手法被保留下来）。但它如此执着于走一条认知科学的道路，以至于道路越走越窄，毕竟，那边还有脑科学神经科学之类听起来更「科学」的学科。但如今的确是科学主义当道的时代，社会科学也得管自己叫科学不是么。&lt;/p&gt;&#xA;&lt;p&gt;但其实并非所有学术都得是科学不可。很简单的例子，比如各种艺术，都不是科学。技术，这也是当今显学，同样是非常经验的非科学：比如土木工程的很多经验公式，材料学更不用说，和计算机科学区分开来的软件工程——我看很多人也只是学了几个框架就开始上班了。金融学，商学……非科学的学术数不胜数。&lt;/p&gt;&#xA;&lt;p&gt;所以，在我看来，尽管中医是一门已经高度系统化的学问了，但我觉得不妨大大方方承认它并非科学。当然，这并不妨碍你用科学的方法去研究它——比如分析里面的某些成分，进行对照试验（不过这不就是现代医学，所谓「西医」了？）……这段话听起来像知乎上随处可见的cliche，不过与其成为一门伪科学，还不如说自己是非科学。&lt;/p&gt;&#xA;&lt;p&gt;很多人称Deep Learning为炼丹。其实这句话应当反过来理解，我们应当把中医理解为深度学习。神农尝百草，没让神农四肢发冷口吐白沫的自然就是可以入药的植物。在深度学习上，这样的validation是必要的，和正确结果（病人康复）相差甚远的结果可以帮我们反向传递修正参数。&lt;/p&gt;&#xA;&lt;p&gt;中医面对的，乃是如同诸多工程学所面临的一样的复杂而混沌的系统，如果有太多的参数（各种成分都会影响人体的表现），一个个对照试验怎么能行呢？倒不如从一开始设定一种方案，然后再暴力尝试，最终收敛为一套可行的方案。中医的种种理论，比如金木水火土之类，不正是深度学习中的latent layer(隐藏层)吗？人体正是利用各种药物去调节这些参数，最终还原为一个健全的人吗？ 但不要忘了，深度学习需要足够庞大的数据，和足够数量的失败和调整。但可惜的是，人只能死一次，这次试错了，下次得换一个人试了，当然我们还得保证下次的人和这次的人一样。&lt;/p&gt;&#xA;&lt;p&gt;即便中医的思路真的如同我上述所言，但我们依然得明白，深度学习也并非科学，它只是一种技术。它很多时候会带给我们一些不知所云的结果。当然，可以想象，或许有些中医结果甚至可以比现代科学更接近本体论意义上的解决方案，就像我们有时候最开始设置的数值有时候也会是收敛的结果。&lt;/p&gt;&#xA;&lt;p&gt;我并非对传统技艺都抱有敌意，比如我相当喜欢书法：我不会把微信公众号和朋友圈那些东西都叫做书法，同理我也不会觉得那些朋友圈中医是正儿八经的中医。我欣赏书法的形态，以及，现代艺术的意义上，我也能接受生产书法作品这一行为的形态。在另一方面，我appreciate结合新的研究扩展和生产中医理论这一行为，但就像我不会把墨水吃进肚子里一样……我觉得这些理论本身就是一种……中国传统文化。作为「文化」，我想不必努力华化（glorify）它为科学，也不必把它吃进肚子里。&lt;/p&gt;</description>
    </item>
    <item>
      <title>生活黑客</title>
      <link>https://mooxiu.github.io/2019/12/14/%E7%94%9F%E6%B4%BB%E9%BB%91%E5%AE%A2/</link>
      <pubDate>Sat, 14 Dec 2019 03:10:22 +0000</pubDate>
      <guid>https://mooxiu.github.io/2019/12/14/%E7%94%9F%E6%B4%BB%E9%BB%91%E5%AE%A2/</guid>
      <description>&lt;p&gt;我昨天才了解到了一个词：Lifehacker，中文直译为生活黑客。其实意思也非常直观，即运用技巧和捷径来提高生产和生活效率。这个词源自「Life Hack」，维基上说这个词的来源是2004年在O’Reilly的新兴技术会议上，科技记者Danny O’Brien用以描述一些IT技术者们为了让他们工作完成所采用的「令人尴尬的」脚本和捷径。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://painanpainan.home.blog/2019/07/22/%E9%BB%91%E5%AE%A2%E7%94%9F%E6%B4%BB/&#34;&gt;这篇介绍生活黑客的文章&lt;/a&gt; 认为生活黑客乃是用对待系统的思维去对待生活的行为。如果从这个角度来看，其实无论是每天记录自己身体指标的所谓「量化自我」派，还是发现了购物网站不为人知省钱秘诀的人，都是某种Lifehacker的行为。生活黑客们和技术黑客们一样，热爱实验和折腾，试图在纷扰的生活系统中寻求一个最短的路线完成某项活动。&lt;/p&gt;&#xA;&lt;p&gt;PUA (PickUp Artists) 当然也是一种Life Hack，他们为了达成Seduction的目的，他们像行为学家那样研究这一pick up的过程。但不确定的是，他们究竟是对于seduction的结果更加感兴趣，还是对于缩短这一过程的「算法优化」——如果我可以这么说的话——更感兴趣。那么，&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E9%98%BF%E9%81%93%E5%A4%AB%C2%B7%E8%89%BE%E5%B8%8C%E6%9B%BC&#34;&gt;阿道夫·艾希曼(Adolf Eichmann)&lt;/a&gt;做的事情算是一种Life Hack吗？他显然是后者，即对于算法优化更感兴趣的人。尽管是把他的行为概括为Life Hack，看起来太轻描淡写了，但这不正是汉娜·阿伦特让我警惕的那样吗？&lt;/p&gt;</description>
    </item>
    <item>
      <title>折纸的乐趣？</title>
      <link>https://mooxiu.github.io/2019/11/23/%E6%8A%98%E7%BA%B8%E7%9A%84%E4%B9%90%E8%B6%A3%EF%BC%9F/</link>
      <pubDate>Sat, 23 Nov 2019 06:29:22 +0000</pubDate>
      <guid>https://mooxiu.github.io/2019/11/23/%E6%8A%98%E7%BA%B8%E7%9A%84%E4%B9%90%E8%B6%A3%EF%BC%9F/</guid>
      <description>&lt;p&gt;前几天参加公司的一个培训，日本那边的同事和中国这边的混合坐在一起分成几个小组，做一些活动之类。坐在我旁边的日本女生一直在无聊的时候折恐龙，我意识到这是一种非常优雅地表达自己玩世不恭的方式，但她本意是否如此我就不得而知了，至少她是一个做笔记和小组讨论极其认真的人。&lt;/p&gt;&#xA;&lt;p&gt;数学上来说，折纸带给我一种维度极速扩张的体验。就像编曲中加入各种和声乐器，但折纸是一种成本更为低廉，速度更加迅猛，更加可感的体验方式。我觉得欧拉或者高斯一定是折纸高手。我维基百科了一下，发现果然有所谓「&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E6%91%BA%E7%B4%99%E6%95%B8%E5%AD%B8&#34;&gt;折纸数学&lt;/a&gt;」这种东西，上面说：&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;带有折痕的平纸重新折出原来的形状这一问题已被Marshall Bern和Barry Hayes证明为NP完全问题&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;以上就是为什么对折纸逆向工程那么困难的原因了，有些复杂的包装盒也让人生出反复拆解之乐趣。能够进行复原，显然是智力优越的彰显——中产阶级自慢于能够优雅折叠围巾或者领带看来也是空穴来风。村上春树「Birthday Girl」这篇短篇小说中写到一个意大利餐厅经理就得意于自己能够不看镜子就能系上领结：&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;The manager always wore a black suit, white shirt, and bow tie——not a clip-on bow tie, but the real thing, tied by hand. It was a point of pride for him that he could tie it perfectly without looking in the mirror. He performed his duties adroitly day after day.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;伊恩麦克尤恩的「立体几何」就是折纸乐趣的拓扑——由折纸变成折人。当然他煞有介事的描写其实当然含混不清，你根本没有办法像他说的那样让一张白纸从你手中消失。&lt;/p&gt;</description>
    </item>
    <item>
      <title>爲什麽應當慎重擇業</title>
      <link>https://mooxiu.github.io/2019/11/17/%E4%B8%BA%E4%BB%80%E4%B9%88%E5%BA%94%E5%BD%93%E6%85%8E%E9%87%8D%E6%8B%A9%E4%B8%9A/</link>
      <pubDate>Sun, 17 Nov 2019 15:01:13 +0000</pubDate>
      <guid>https://mooxiu.github.io/2019/11/17/%E4%B8%BA%E4%BB%80%E4%B9%88%E5%BA%94%E5%BD%93%E6%85%8E%E9%87%8D%E6%8B%A9%E4%B8%9A/</guid>
      <description>&lt;p&gt;成为社会人以后，我对社畜境遇变得异常关注。最近在华尔街日报中文网读到一片名为「如何摆脱时刻待命的职场文化」的文章，里面推荐了四部相关电影：1992年的「大玩家 the Player」，2006年「穿普拉达的女王 The Devil Wears Prada」，2009年的「在云端 Up in the Air」和2018年的「牵线 Set it Up」。我在周末看了后面三部。尽管故事好坏参差不齐，但女主人公的境遇都相似：她们从事某个职业的原因都不是因为她们喜欢这个职业，而是因为她们希望通过这份工作实现什么别的东西。「在云端」女主选择当下工作是为了自己的男朋友，「穿普拉达的女王」和「牵线」的女主则是为了能自己写东西。问题的关键在于，正是因为她们从事了当前的职业，以至于她们和自己为了那个东西而从事这份职业的那个东西越走越远。&lt;/p&gt;&#xA;&lt;p&gt;但神奇的是，她们没有一个人是因为收入高而从事当前的工作的。这里的困境和我周围的困境有所不同，如果你想要的是钱之外的事情，那困境就可能有转机，在老板前面数落他的人品并怒吼「我他妈不干了」才不会是无根之木。但此时此刻，这里很多劳工面临着的是多重困局：他们有家庭得养活，以及他们面临的是抽象的系统。&lt;/p&gt;&#xA;&lt;p&gt;前者很好理解，电影里面那些人没有一个有丈夫有小孩，他们只需要养活自己，因此他们才可以在必要的时候选择流动。但选择流动并不代表你可以把咖啡倒在你老板的脸上，因为在某些公司，某些岗位之上，你从入职之日到你离职之时你的老板都未必知道有你这个人，反过来说，你甚至也不知道你的老板长什么样子，你可能在维基百科或是公司官网上见过这个人，但你连给他买咖啡的交集都没有。&lt;/p&gt;&#xA;&lt;p&gt;尽管卡夫卡早就写到过，但科层化的体制已经从官僚系统散布到各个地方。一切都是那么地疏远和不可理解，当我每天上班面对我面前的电脑时，我其实有一万个问题：为什么要这样，这样有什么好的，客户为什么喜欢这个样子？我们为什么得用这个软件而并非那一个？最终这样一个一个小的问题变成了大的问题，并且代代相传，人工构筑的体系也变得越来越庞大，我们越来越不明白为什么最开始它是这样规定的，而不是那样。我还记得我第一次遇到线性代数的恐惧：那是我第一次一下子必须全然接受一整套新系统，为什么我们要这么规定，既然你告诉这些东西这么重要，但这些东西是怎么产生的呢？诸如此类。在学习初等数学的时候，我似乎还可以游刃有余地从一个定理推导出一个又一个定理最终贯穿始终，但学到线性代数的时候，那种连续性被破坏了。我必须一下子接受一个全新的系统，并且教材也总是蜻蜓点水地告诉你一点结论，至于这些结论从何而来则全然无从知晓。这其实是大多数人面临现代生活的时候遇到的困境，但很多人不认为这是一种困境，因为这些困境被Encapsulated（封装）得太好了，以致于大多数人还没有感觉到自己正在遭受困境。&lt;/p&gt;&#xA;&lt;p&gt;每天毫无意义的工作令我困惑，然而更令我困惑的是很多人心安理得地忍受着这样的生活。我们用着我们无法理解的交通工具，坐在我们无法理解电脑上，做着一些我们无法理解的工作，然后准时准点下班，无论是6点还是12点。如果你不知道一个软件如何工作，你最多只能浮于表面地对它进行操作，当它出了什么问题的时候你就无能为力了。同样，尽管你对自己的工作如何进行了如指掌，但它究竟如何为你的公司带来利益，你的工作通过何种途径与更广泛的世界产生联系，你则无从得知。从这一点上来说，我们都在被迫过一种流于表面的生活。而流于表面，带来的就是意义的缺失：当你不知道自己究竟在干什么的时候，你何以得知自己工作的意义在哪里。&lt;/p&gt;&#xA;&lt;p&gt;当一个建筑工人在搅拌水泥砂浆，搭脚手架的时候，他们能看到的自己的工作的意义是什么？盖起一座新的大楼？然后呢？这种大楼将以何种身份参与更广泛世界呢？它如何与人互动呢？如果它是一个商场，那么这座商场会有商家进驻吗？如果它是商品房，它会空置吗？会沦为炒房的金融工具吗？最后的最后，这个房子的建造真的能给世界带来积极的影响吗？后面的这些问题几乎不会有人去问，即便在心里问了，他们也无权去干涉这个房屋的建造。同理，一个程序员的工作，一个交易员的工作，与此类似，他们都在诸如此类的迷宫里，离意义越来越远。&lt;/p&gt;&#xA;&lt;p&gt;我现在越来越觉得，只有那些与传统更接近，与人越接近的生活，才是真实的生活，意义也由此生发。汉娜阿伦特「人的境况」中把人类的活动分为三种：劳动（labor），工作（work）和行动（action）。关于行动，她说：&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;行动，是唯一不以物或事为中介的，直接在人们之间进行的活动，与之对应的是复数性(plurality)的人之条件，即不是单个的人，而是人们……但复数性却是一切政治生活特有的条件——不仅是必要条件，而且是充分条件。因此在罗马人（也许是我们已知的最富政治性的民族）的语言中，“活着”等于说“在人们中间。&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;从这个意义上而言，只有行动的人才是真正活着的人；仅仅从事以物或事为中介的工作的生活，并非真正的生活。这几部电影的女主人公，无一例外地冲进了人群之中，他们必须不停与各种各样的人周旋，这也带给了他们尽管忙碌但真正的生活。她们收获了真实的感觉，获得了真实的经验，完成了自我的改变，同时，也在互动之中改变了她人，这也是故事从何发生。这就是为什么，备受尊敬的程序员很有可能是失去“行动”的，活着与否相当可疑的人群。而销售员，社工，记者这样的职业，才是会产生故事，拥有真实意义的人。&lt;/p&gt;&#xA;&lt;p&gt;但这些都和是否需要长时间劳动没有关系，那是现代社会带来的另一个问题了。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
